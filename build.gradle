buildscript {
    ext.kotlinVersion = '1.2.41'
    ext.junitVersion = '5.2.0'
    ext.jacksonVersion = '2.9.4'
    ext.javaMailVersion = '1.6.1'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

group 'io.github.xstefanox'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

configurations {
    ktlint
}

test {
    useJUnitPlatform()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "javax.mail:javax.mail-api:$javaMailVersion"
    compile "com.sun.mail:javax.mail:$javaMailVersion"
    compile 'com.github.seancfoley:ipaddress:4.2.0'

    testRuntime "org.junit.platform:junit-platform-launcher:1.2.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile 'org.assertj:assertj-core:3.9.1'
    testCompile 'org.mockito:mockito-core:2.18.3'

    ktlint "com.github.shyiko:ktlint:0.23.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}

check.dependsOn ktlint
